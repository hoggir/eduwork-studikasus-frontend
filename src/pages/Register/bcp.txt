import React, { useState } from "react";
import { useDispatch } from "react-redux";
import axios from "axios";
import { RegisterAuthAction } from "../../actions/authActionReg";
import { Button, Form, FormGroup, Label, Input } from "reactstrap";
import { useNavigate } from "react-router-dom";
const qs = require("query-string");

function Register() {
  const dispatch = useDispatch();
  const API = "http://localhost:3000/auth";
  const Navigate = useNavigate();

  const initialState = {
    full_name: "",
    email: "",
    password: "",
    errorMessage: null,
  };

  const [data, setData] = useState(initialState);

  const handleInputChange = (event) => {
    setData({
      ...data,
      [event.target.name]: event.target.value,
    });
  };

  const handleFormSubmit = (event) => {
    event.preventDefault();
    setData({
      ...data,
      errorMessage: null,
    });

    const requestBody = {
      full_name: data.full_name,
      email: data.email,
      password: data.password,
    };

    const config = {
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    };

    axios
      .post(API + "/register", qs.stringify(requestBody), config)
      .then((response) => {
        if (response.data.error === 1) {
          setData({
            ...data,
            errorMessage: response.data.message,
          });
        } else {
          dispatch(RegisterAuthAction({ data: data }));
          alert("Akun berhasil di buat. Silahkan Login")
          Navigate("/login");
        }
      })
      .catch((error) => {
        console.log(error);
      });
  };

  return (
    <div className="login-wrapper">
      <Form onSubmit={handleFormSubmit}>
        <FormGroup>
          <Label for="full_name">Full Name</Label>
          <Input
            type="name"
            value={data.full_name}
            onChange={handleInputChange}
            name="full_name"
            id="full_name"
            placeholder="full name"
          />
        </FormGroup>
        <FormGroup>
          <Label for="Email">Email</Label>
          <Input
            type="email"
            value={data.email}
            onChange={handleInputChange}
            name="email"
            id="Email"
            placeholder="email"
          />
        </FormGroup>
        <FormGroup>
          <Label for="Password">Password</Label>
          <Input
            type="password"
            value={data.password}
            onChange={handleInputChange}
            name="password"
            id="Password"
            placeholder="password"
          />
        </FormGroup>
        {data.errorMessage && (
          <div className="alert alert-danger" role="alert">
            {data.errorMessage}
          </div>
        )}

        <Button>Daftar</Button>
      </Form>
    </div>
  );
}

export default Register;
