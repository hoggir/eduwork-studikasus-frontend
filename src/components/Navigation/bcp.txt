import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { Button, Form, FormGroup, Label, Input } from "reactstrap";
import "./index.css";
import { useDispatch, useSelector } from "react-redux";
import { loginUser } from "../../actions/userAction";

const qs = require("query-string");
const api = "http://localhost:3000/auth";

function LoginPage() {
  const Navigate = useNavigate();
  const dispatch = useDispatch();
  const {
    userLoginResult,
    userLoginLoading,
    userLoginError,
    userLoginisAuth,
    userLoginToken,
  } = useSelector((state) => state.UserReducer);
  //console.log(userLoginResult);

  useEffect(() => {
    if (userLoginError) {
      setData({
        ...data,
        errorMessage: userLoginError,
        loading: userLoginLoading,
      });
    }
    //dispatch(loginUser());
    //eslint-disable-next-line
  }, [userLoginError, dispatch]);

  const initialState = {
    email: "",
    password: "",
    loading: false,
    errorMessage: null,
    token: null,
  };

  const [data, setData] = useState(initialState);

  const handleInputChange = (event) => {
    setData({
      ...data,
      [event.target.name]: event.target.value,
    });
  };

  const handleFormSubmit = (event) => {
    event.preventDefault();
    setData({
      ...data,
      loading: true,
      errorMessage: null,
      token: null,
    });
    dispatch(loginUser(data, Navigate));
    if (userLoginResult) {
      alert("berhasil Login");
    }
  };

  return (
    <div className="login-wrapper">
      <Form onSubmit={handleFormSubmit}>
        <FormGroup>
          <Label for="exampleEmail">Email</Label>
          <Input
            type="email"
            value={data.email}
            onChange={handleInputChange}
            name="email"
            id="exampleEmail"
            placeholder="with a placeholder"
          />
        </FormGroup>
        <FormGroup>
          <Label for="examplePassword">Password</Label>
          <Input
            type="password"
            value={data.password}
            onChange={handleInputChange}
            name="password"
            id="examplePassword"
            placeholder="password placeholder"
          />
        </FormGroup>

        {data.errorMessage && (
          <div className="alert alert-danger" role="alert">
            {data.errorMessage}
          </div>
        )}

        <Button disabled={data.loading}>
          {data.loading ? "...Loading" : "Login"}
        </Button>
      </Form>
    </div>
  );
}

export default LoginPage;
